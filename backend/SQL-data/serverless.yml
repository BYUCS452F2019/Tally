

service: sql-data

provider:
  name: aws
  runtime: nodejs10.x
  region: us-east-1
  stage: development
  environment:
    AURORA_HOST: ${self:custom.AURORA.HOST}
    AURORA_PORT: ${self:custom.AURORA.PORT}
    AURORA_DB_NAME: ${self:custom.AURORA.DB_NAME}
    AURORA_USERNAME: ${self:custom.AURORA.USERNAME}
    AURORA_PASSWORD: ${self:custom.AURORA.PASSWORD}

# Define variables here for lisibility
custom:
  AURORA:
    DB_NAME: database-2
    USERNAME: admin
    PASSWORD: Tally4all&me
    HOST: database-2.cluster-ctvm4ypwdypg.us-east-1.rds.amazonaws.com
    PORT: 3306
    VPC_CIDR: 10
  SQS:
    NAME: aurora-queue-${opt:stage, self:provider.stage}

functions:
  hello:
    handler: handler.hello
  async_query:
    handler: handler.sqs
    vpc:
      securityGroupIds:
        - Fn::GetAtt: ServerlessVPC.DefaultSecurityGroup
      subnetIds:
        - Ref: ServerlessSubnetA
        - Ref: ServerlessSubnetB
        - Ref: ServerlessSubnetC
    events:
      - sqs:
          arn: arn:aws:rds:us-east-1:736264792481:cluster:database-2
          batchSize: 1
  sync_query:
    handler: handler.query
    vpc:
      securityGroupIds:
        - Fn::GetAtt: ServerlessVPC.DefaultSecurityGroup
      subnetIds:
        - Ref: ServerlessSubnetA
        - Ref: ServerlessSubnetB
        - Ref: ServerlessSubnetC
    events:
      - http:
          path: /query
          method: post
resources:
  Resources:
    AsyncQueryQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.SQS.NAME}
    # VPC config
    ServerlessVPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: ${self:custom.AURORA.VPC_CIDR}.0.0.0/16
        EnableDnsSupport: true
        EnableDnsHostnames: true
        InstanceTenancy: default
    ServerlessSubnetA:
      DependsOn: ServerlessVPC
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: ServerlessVPC
        AvailabilityZone: ${self:provider.region}a
        CidrBlock: ${self:custom.AURORA.VPC_CIDR}.0.0.0/24
    ServerlessSubnetB:
      DependsOn: ServerlessVPC
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: ServerlessVPC
        AvailabilityZone: ${self:provider.region}b
        CidrBlock: ${self:custom.AURORA.VPC_CIDR}.0.1.0/24
    ServerlessSubnetC:
      DependsOn: ServerlessVPC
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: ServerlessVPC
        AvailabilityZone: ${self:provider.region}c
        CidrBlock: ${self:custom.AURORA.VPC_CIDR}.0.2.0/24
    # Aurora DB config
    AuroraSubnetGroup:
      Type: AWS::RDS::DBSubnetGroup
      Properties:
        DBSubnetGroupDescription: "Aurora Subnet Group"
        SubnetIds:
          - Ref: ServerlessSubnetA
          - Ref: ServerlessSubnetB
          - Ref: ServerlessSubnetC
    # AuroraRDSClusterParameter:
    #   Type: AWS::RDS::DBClusterParameterGroup
    #   Properties:
    #     Description: Parameter group for the Serverless Aurora RDS DB.
    #     Family: aurora-mysql5.7
    #     Parameters:
    #       character_set_database: "utf32"
    AuroraRDSInstanceParameter:
      Type: AWS::RDS::DBParameterGroup
      Properties:
        Description: Parameter group for the Serverless Aurora RDS DB.
        Family: aurora-mysql5.7
        Parameters:
          sql_mode: IGNORE_SPACE
          max_connections: 100
          wait_timeout: 900
          interactive_timeout: 900
    # AuroraRDSCluster:
    #   Type: "AWS::RDS::DBCluster"
    #   Properties:
    #     MasterUsername: ${self:custom.AURORA.USERNAME}
    #     MasterUserPassword: ${self:custom.AURORA.PASSWORD}
    #     DBSubnetGroupName:
    #       Ref: AuroraSubnetGroup
    #     Engine: aurora-mysql
    #     EngineVersion: "5.7"
    #     DatabaseName: ${self:custom.AURORA.DB_NAME}
    #     BackupRetentionPeriod: 3
    #     DBClusterParameterGroupName:
    #       Ref: AuroraRDSClusterParameter
    #     VpcSecurityGroupIds:
    #       - Fn::GetAtt: ServerlessVPC.DefaultSecurityGroup
    # AuroraRDSInstance:
    #   Type: "AWS::RDS::DBInstance"
    #   Properties:
    #     DBInstanceClass: db.t2.medium
    #     DBSubnetGroupName:
    #       Ref: AuroraSubnetGroup
    #     Engine: aurora-mysql
    #     EngineVersion: "5.7"
    #     PubliclyAccessible: false
    #     DBParameterGroupName:
    #       Ref: AuroraRDSInstanceParameter
    #     DBClusterIdentifier:
    #       Ref: AuroraRDSCluster